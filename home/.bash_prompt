
# Sexy Bash Prompt, inspired by "Extravagant Zsh Prompt"
# Screenshot: http://cloud.gf3.ca/M5rG
# A big thanks to \amethyst on Freenode
# Shamelessly ripped off from https://github.com/gf3/dotfiles

# Don't change TERM variable if it's already colorized. This plays nice with tmux (screen-256color)
if ! echo $TERM | grep 256 >/dev/null 2>&1; then
  if [[ $COLORTERM = gnome-* && $TERM = xterm ]]  && infocmp gnome-256color >/dev/null 2>&1; then export TERM=gnome-256color
  elif [[ $TERM = xterm ]] && infocmp xterm-256color >/dev/null 2>&1; then export TERM=xterm-256color
  fi
fi

if [[ $COLORTERM =~ ^(truecolor|24bit)$ ]]; then 
      BOLD=$(tput bold)
      RESET=$(tput sgr0)

      background_code="29;31;33"
      white_code="197;200;198"

      # tomorrow-night colorscheme, manually converted from hex codes
      red_code="204;102;102"
      orange_code="222;147;95"
      yellow_code="240;198;116"
      green_code="181;188;104"
      aqua_code="138;190;183"
      blue_code="129;162;190"
      purple_code="178;148;187"


      BACKGROUND="\e[48;2;${background_code}m"

      RED="\e[38;2;${red_code}m"
      ORANGE="\e[38;2;${orange_code}m"
      BLUE="\e[38;2;${blue_code}m"
      AQUA="\e[38;2;${aqua_code}m"
      GREEN="\e[38;2;${green_code}m"
      PURPLE="\e[38;2;${purple_code}m"
      WHITE="\e[38;2;${white_code}m"
      YELLOW="\e[38;2;${yellow_code}m"
elif  tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
      RED=$(tput setaf 1)
      ORANGE=$(tput setaf 4)
      BLUE=$(tput setaf 4)
      AQUA=$(tput setaf 1)
      GREEN=$(tput setaf 2)
      PURPLE=$(tput setaf 1)
      WHITE=$(tput setaf 12)
      YELLOW=$(tput setaf 3)
    else
      ORANGE=$(tput setaf 4)
      GREEN=$(tput setaf 2)
      PURPLE=$(tput setaf 1)
      WHITE=$(tput setaf 7)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
else
    ORANGE="\033[1;33m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BOLD=""
    RESET="\033[m"
fi

parse_git_dirty () {
  [[ $(git status 2> /dev/null | tail -n1 | cut -c 1-17) != "nothing to commit" ]] && echo "*"
}
parse_git_branch () {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

PS1="\[${AQUA}\]\u\[$WHITE\]@\[$GREEN\]\h\[$WHITE\]:\[$BOLD$BLUE\]\w\[$RESET$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$BOLD$RED\]\$(parse_git_branch)\[$WHITE\]\n\$ \[$RESET\]"
